%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% generate mixture sample
%
function sample=g_mix_gen(miv,sigv,pp,N)
%  
% Input data
% miv - vector of means
% sigv - vector of standard deviations
% pp - vector of weights
% N - number of samples to be generated

% Generation of Gaussian mixture data

% number of components
%
KS=length(miv);

% numbers of samples generated by components
nums=multirnd(N,pp);

% sample
sample=zeros(1,N);
kakt=1;
for kks=1:KS
   ss=normrnd(miv(kks),sigv(kks),1,nums(kks));
   sample(kakt:kakt+nums(kks)-1)=ss;
   kakt=kakt+nums(kks);
end
sample=sample(randperm(N));


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% random number generator for nultinomial distribution
function numr=multirnd(N,pp)

% Input data
% pp - vector of probabilities of the multinomial distribution
% N - number of independent samples to be generated

Nb=N;
for kk=1:length(pp)
   prwd=pp(kk)/sum(pp(kk:length(pp)));
   numr(kk)=binornd(Nb,prwd);
   Nb=Nb-numr(kk);
end




